SPR# 状 P Open Close ver     Type  概要
-------------------------------------------------------------------------------
0001 ◎ C 07/23 07/23 0.001│ToDo│プロジェクト作成
0002 ◎ C 07/23 07/23 0.001│ToDo│BoardArray クラス追加
0003 ◎ C 07/24 07/24 0.001│ToDo│BoardArray::can_put_BLACK(x, y) 実装
0004 ◎ C 07/24 07/24 0.001│ToDo│BoardArray::put_BLACK(x, y) 実装
0005 ◎ C 07/24 07/24 0.001│ToDo│BoardArray::put_WHITE(x, y) 実装
0006 ◎ C 07/24 07/24 0.001│ToDo│BoardArray::un_put_BLACK(x, y), un_put_WHITE(x, y) 実装
0007 ◎ C 07/24 07/24 0.001│ToDo│10手先までの局面を全部生成し、末端局面数を求めてみる
0008 ◎ C 07/24 07/24 0.001│ToDo│盤面位置・方向を引数にとり、パターンをインデックス化する関数実装
0009 ◎ C 07/24 07/30 0.001│ToDo│インデックス→打つ場所ごとの遷移先インデックステーブル作成
0010 ◎ C 07/28 07/28 0.001│ToDo│BoardIndex クラス追加
0011 ◎ C 07/30 07/30 0.001│ToDo│ushort put_black(ushort index, int i, int& n1, int& n2)
0012 ● C 07/30            │ToDo│ushort put_white(ushort index, int i, int& n1, int& n2)
0013 ◎ C 08/01 08/01 0.001│ToDo│BoardBitboard クラス追加
0014 ◎ C 08/01 08/01 0.001│ToDo│BoardBitboard::get_revbits(Bitboard bit)
0015 ◎ C 08/01 08/01 0.001│ToDo│Bitboard：10手先までの局面を全部生成し、末端局面数を求めてみる
0016 ◎ C 08/01 08/01 0.001│問題│局面数カウント：パスの場合に対応していない
0017 ● C 08/02            │ToDo│BoardBitboard::get_revbits(Bitboard bit)：非ループ版実装＆計測
0018 ◎ C 08/13 08/14 0.001│ToDo│ランダムに着手を選び、指定空き数まで進めることを可能に
0019 ● C 08/16            │ToDo│終局まで完全読み：NegaAlpha(b, w)
0020 ◎ C 08/17 08/17 0.001│ToDo│int popcount(Bitboard) 実装
0021 ● C 08/17            │ToDo│
0022 ● C 08/17            │ToDo│
0023 ● C 08/17            │ToDo│
0024 ● C 08/17            │ToDo│
0025 ● C 08/17            │ToDo│
